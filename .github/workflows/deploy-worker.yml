name: Deploy worker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'

      # https://github.com/actions/cache/blob/main/examples.md#node---yarn-2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install modules
        run: yarn --immutable

      - name: Prepare release
        id: prepare-release
        run: |
          # Install Sentry CLI
          curl -sL https://sentry.io/get-cli/ | bash

          # Create new Sentry release
          export SENTRY_RELEASE=$(sentry-cli releases propose-version)

          echo "::set-output name=sentry_release::$SENTRY_RELEASE"
        shell: bash

      - name: Deploy
        uses: cloudflare/wrangler-action@1.3.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: 'production'
          workingDirectory: 'packages/backend'
          secrets: |
            CLIENT_SECRET
            CLIENT_ID
            SENTRY_DSN
            SENTRY_RELEASE
        env:
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_RELEASE: ${{ steps.prepare-release.outputs.sentry_release }}

      - name: Upload source maps
        run: |
          # Create new deploy for this Sentry release
          sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
          sentry-cli releases set-commits --auto $SENTRY_RELEASE
          # Upload
          sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps --ext mjs --ext map packages/backend/dist
          sentry-cli releases finalize $SENTRY_RELEASE

          sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_DEPLOY_ENVIRONMENT
        env:
          SENTRY_RELEASE: ${{ steps.prepare-release.outputs.sentry_release }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_DEPLOY_ENVIRONMENT: ${{ secrets.SENTRY_DEPLOY_ENVIRONMENT }}
